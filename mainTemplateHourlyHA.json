{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring"
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "Brazil South",
        "Canada Central",
        "Canada East",
        "Central US",
        "East Asia",
        "East US",
        "East US 2",
        "Japan West",
        "Japan East",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Asia",
        "West Europe",
        "West US"
      ],
      "metadata": {
        "description": "Location to deploy"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique name for the Storage Account where the machines disks will be placed."
      }
    },
    "storageAccountType": {
      "defaultValue": "Standard_LRS",
      "type": "string",
      "metadata": {
        "description": "Type of Storage Account chosen"
      }
    },
    "vmName": {
      "type": "string"
    },
    "dnsNameForLBIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the WAF."
      }
    },
    "vNETName": {
      "type": "string"
    },
    "addressPrefix": {
      "defaultValue": "10.0.0.0/16",
      "type": "String",
      "metadata": {
        "description": "Address prefix of the network for Barracuda VM."
      }
    },
    "subnetPrefix": {
      "defaultValue": "10.0.0.0/24",
      "type": "String",
      "metadata": {
        "description": "Subnet prefix of the network for Barracuda VM."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the WAF."
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2 ,
      "minValue": 2,
      "maxValue": 2
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Size of instances"
      }
    }
  },
  "variables": {
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
    "lbhttpProbeID": "[concat(variables('lbID'),'/probes/httpProbe')]",
    "lbhttpsProbeID": "[concat(variables('lbID'),'/probes/httpsProbe')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/loadBalancerBackend')]",
    "loadBalancerName": "[concat(parameters('vmName'),'LB')]",
    "nicNamePrefix": "[concat(parameters('vmName'),'NIC')]",
    "publicIPAddressName": "[concat(parameters('vmName'),'PIP')]",
    "publicIPAddressType": "Static",
    "PublicIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "vnetID": "[concat(resourceGroup().id,'/providers/Microsoft.Network/virtualNetworks/',parameters('vNETName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "vmStorageAccountContainerName": "vhds",
    "vNetResourceGroup": "[resourceGroup().id]",
    "WAFAVSetName": "[concat(parameters('vmName'),'AV')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vNETName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[Parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "wafPublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForLBIP')]"
        }
      }
    },
    {
      "name": "[variables('WAFAVSetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "WAFAVSet"
      },
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNamePrefix'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',parameters('vNETName'))]",
        "[concat(variables('lbID'),'/inboundNatRules/SecureMGMT',copyindex(1))]",
        "[concat(variables('lbID'),'/inboundNatRules/MGMT',copyindex(1))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/MGMT',copyindex(1))]"
                },
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/SecureMGMT',copyindex(1))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('loadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "WAFExtLB"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "loadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('PublicIPID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "loadBalancerBackend"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbhttpProbeID')]"
              }
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbhttpProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "httpProbe",
            "properties": {
              "protocol": "Http",
              "port": 80,
              "intervalInSeconds": 30,
              "numberOfProbes": 2,
              "requestPath": "/"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('loadBalancerName'),'/','MGMT',copyIndex(1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "WAFInboundNAT"
      },
      "copy": {
        "name": "lbMGMTLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(8000)]",
        "backendPort": 8000,
        "enabledFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('loadBalancerName'),'/','SecureMGMT',copyIndex(1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "WAFInboundSecureNAT"
      },
      "copy": {
        "name": "lbSecureMGMTLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(8443)]",
        "backendPort": 8443,
        "enabledFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat (parameters('vmName'), copyindex(1))]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "hourly",
        "Product": "waf",
        "Publisher": "barracudanetworks"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('WAFAVSetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('WAFAVSetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), copyindex(1))]",
          "adminUsername": "will-be-replaced-by-admin",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "barracudanetworks",
            "offer": "waf",
            "sku": "hourly",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('wafosdisk',copyindex(1))]",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/','wafosdisk', copyindex(1), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix'),copyindex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ]
}
